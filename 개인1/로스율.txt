[77261.3984375]
[91044.390625]
[array([[1591173.4],
       [1657068.6],
       [1734950.8],
       [1806761.4],
       [1851689.2]], dtype=float32),
 array([[ -42362.07 ,  -78879.98 , -200662.25 ,  152996.81 ],
       [ -27235.684, -111802.66 , -222986.03 ,  122821.58 ],
       [ -28514.838, -117054.516, -233465.61 ,  128591.15 ],
       [ -24052.135, -121450.164, -249956.45 ,  146138.14 ],
       [ -12558.019, -131072.62 , -251987.89 ,  163140.69 ]],

x 전체 노말라이저 스케일러
econo = Input(shape=(5,3))
econo = Dense(200)(econo)
econo = Dense(15)(econo)
econo = Reshape((75,1))(econo)
econo = Conv1D(5,1)(econo)
econo = Flatten()(econo)
econo = Dense(15)(econo)
econo = Reshape((5,3))(econo)
각모델
president = concatenate((econo,democ))
president = Flatten()(president)
president = Dense(200)(president)
president = Dense(1)(president)

congress = concatenate((econo,democ))
congress = Flatten()(congress)
congress = Dense(400)(congress)
congress = Dense(4)(congress)

model = Model(inputs=[econo,democ], outputs=[president,congress],)
model.summary()



model.compile(loss=['binary_crossentropy','mae'], optimizer='adam')
hist = model.fit([econo_x,democ_x],[president_y,congressmember_y],epochs=1,batch_size=10, validation_split=0.2)
epoch1 

//
[array([[-1811381.9],
       [-1870240.6],
       [-1958143.2],
       [-2024037.1],
       [-2078477.4]], dtype=float32),
 array([[ 69973.73 , -53870.6  ,  84599.13 ,  41767.44 ],
       [ 77446.43 , -61704.18 ,  84210.055,  41639.855],
       [ 81083.12 , -64608.535,  88166.74 ,  43597.63 ],
       [ 85066.93 , -66133.15 ,  91582.77 ,  45999.51 ],
       [ 86196.61 , -66426.87 ,  92017.64 ,  46777.457]], dtype=float32)]
로스 4만
에포100
//
[array([[313439.72],
       [358539.38],
       [375388.16],
       [377686.72],
       [350899.94]], dtype=float32), 
array([[  3637.5276 ,  -6932.7266 ,   -665.36487,  -7258.35   ],
       [  2085.4429 ,  -7750.901  ,    437.3281 ,  -9427.511  ],
       [  2181.2905 ,  -8119.189  ,    458.39288,  -9868.946  ],
       [  1704.7065 ,  -9394.15   ,   -374.13086, -11383.797  ],
       [  1696.12   , -10610.894  ,  -1066.2354 , -12233.744  ]],
로스2만~7천
에포2천
//
congress = concatenate((econo,democ))
congress = Conv1D(12,3)(congress)
머지모델에 각각 추가
[array([[-1003415.6],
       [-1046535.2],
       [-1095723.2],
       [-1142438.5],
       [-1168165.9]], dtype=float32), array([[ 403.65347 ,  489.26047 , -318.47153 ,  228.32646 ],
       [ 181.05167 ,  408.91544 , -154.20436 ,  -94.82895 ],
       [ 190.27856 ,  425.87167 , -160.28493 ,  -99.60814 ],
       [  35.473934,  570.2103  , -198.34605 , -227.72449 ],
       [ 109.75663 ,  582.95825 , -340.034   , -136.68687 ]],
      dtype=float32)]
에포2천 로스 1000가량

//
[array([[-560985.2 ],
       [-616394.94],
       [-645361.75],
       [-676119.56],
       [-691507.2 ]], dtype=float32), array([[ -98.11954 , -495.76968 , -101.875496,  -38.011402],    
       [  21.722412, -126.436806,  137.27066 ,   14.567396],
       [  21.706055, -133.42886 ,  142.96439 ,   14.280653],
       [ -46.862427, -316.7858  ,  128.74377 ,  -74.51817 ],
       [ -28.411621, -458.85098 ,  369.05438 , -198.93163 ]],
얼리스타핑, 체크카운트 적용 
로스 4백~천
//
[array([[1164318.6],
       [1210077.5],
       [1266949.8],
       [1335806. ],
       [1386817.6]], dtype=float32), array([[ 37.5227   , 129.25377  ,  -6.4841914,  -7.4490743],
       [ 74.84272  , 126.50329  ,  -1.5239793,  -5.0193524],
       [ 77.858986 , 129.53888  ,  -1.6479348,  -6.097381 ],
       [ 56.321636 , 129.15414  ,  -3.0221868,  -7.778956 ],
       [ 16.943363 , 117.350296 ,  -3.2232952, -10.386478 ]],
에포 이만오천
로스 천 정도

//
[array([[-875776.3 ],
       [-875647.4 ],
       [-916803.4 ],
       [-950167.94],
       [-981451.3 ]], dtype=float32), array([[110.31112  , 176.32475  ,   5.7781444,  14.491078 ],    
       [142.19109  , 195.10551  ,  12.189312 ,  16.730177 ],
       [148.55664  , 200.9985   ,  12.400883 ,  16.823559 ],
       [130.7916   , 204.15904  ,  13.0388565,  16.745544 ],
       [100.239914 , 181.1442   ,   9.002601 ,  18.688469 ]],

democ = Input(shape=(5,3))
democ = Dense(200)(democ)
democ = Dense(15)(democ)
democ = Reshape((75,1))(democ)
democ = LSTM(64)(democ)

에포만오천
로스 천이하

//

[array([[ 847188.7],
       [ 854510. ],
       [ 894670.9],
       [ 946002.1],
       [1000827.6]], dtype=float32), array([[180.33734  , 245.1661   ,  14.350094 ,   5.373485 ],     
       [206.70233  , 254.62482  ,  15.174657 ,   3.2003086],
       [215.49373  , 263.2954   ,  15.812409 ,   2.4686308],
       [218.60611  , 274.739    ,  16.750668 ,   2.20924  ],
       [204.64528  , 275.35583  ,  19.750277 ,   3.7099488]],

에포 만오천 로스 천

//
[array([[ 7460.25 ],
       [17725.562],
       [18559.312],
       [32701.812],
       [53051.438]], dtype=float32), array([[101.89774  , 144.86203  ,   1.9505537,  12.115426 ],     
       [149.13333  , 173.46326  ,   7.4810996,   5.7537613],
       [153.07095  , 176.06604  ,   7.7230606,   5.6323543],
       [118.82736  , 137.80626  ,   7.546393 ,   1.5525546],
       [111.61573  , 154.2963   ,  16.125063 ,  -3.8525324]],
      dtype=float32)]

democ = Input(shape=(5,3))
democ = Dense(200)(democ)
democ = Dense(15)(democ)
democ = Reshape((75,1))(democ)
democ = ReLU(28,10)(democ)
democ = LSTM(64)(democ)
# democ = Flatten()(democ)
democ = Dense(200)(democ)
democ = Dense(15)(democ)
democ = Reshape((5,3))(democ)

머지모델 국회덴스8000 대통령 20
에포만오천
로스 100대

//

[array([[2209327.2],
       [2333462. ],
       [2443134.5],
       [2496441. ],
       [2576039.5]], dtype=float32), array([[ 78.04213  , 172.4875   , -21.873781 ,   1.4177161],   
       [129.0067   , 160.75543  , -12.624052 ,  -6.266095 ],
       [131.0786   , 162.2472   , -13.286467 ,  -7.704259 ],
       [120.10072  , 117.409515 , -18.85221  ,  -6.84081  ],
       [ 81.60333  ,  78.493774 , -30.214994 ,  -6.6014986]],

머지모델 덴스 8000
에포만오천
로스100

//
[array([[2209327.2],
       [2333462. ],
       [2443134.5],
       [2496441. ],
       [2576039.5]], dtype=float32), array([[ 78.04213  , 172.4875   , -21.873781 ,   1.4177161],   
       [129.0067   , 160.75543  , -12.624052 ,  -6.266095 ],
       [131.0786   , 162.2472   , -13.286467 ,  -7.704259 ],
       [120.10072  , 117.409515 , -18.85221  ,  -6.84081  ],
       [ 81.60333  ,  78.493774 , -30.214994 ,  -6.6014986]],

만오천
로스100대
	
//
[array([[-9.4066624e+07],
       [-9.7576424e+07],
       [-1.0216254e+08],
       [-1.0642594e+08],
       [-1.0982980e+08]], dtype=float32), array([[ 51.491615 ,  78.833115 , -14.285623 , -36.5394   ],
       [162.00212  , 203.70671  , -13.903881 ,   7.258505 ],
       [167.38045  , 210.10954  , -14.591108 ,   7.181533 ],
       [ 99.5274   , 109.37433  , -29.643248 ,  -1.9715688],
       [ 86.26591  ,  67.41503  , -54.857494 ,  -2.9152606]],
      dtype=float32)]

에포 만오천 /얼리 3천번에 끊김
로스율 100대이나 원하는 수치가 안나옴

//
[array([[-82012950.],
       [-85299820.],
       [-89308880.],
       [-92726640.],
       [-95602110.]], dtype=float32), array([[ 169.0228  ,  140.8516  ,   46.281597,  -64.40934 ],
       [ 169.75635 ,  149.61708 ,  -38.520145,  -31.806873],
       [ 174.48387 ,  151.95357 ,  -40.731453,  -33.819866],
       [ 170.0257  ,  137.82631 ,  -70.63868 ,  -42.90366 ],
       [ 230.25499 ,  186.82643 , -104.5283  ,  -88.93852 ]],
      dtype=float32)]

로스율 100대 얼리 3천
로버스트 스케일러
민주당계 보수당계는 얼추 비슷한 숫자가 나와서 국회쪽에는 같은 로버스트 스케일러
대통령은 다른 스케일러

//
[array([[-1.0157919e+08],
       [-1.0615038e+08],
       [-1.1113939e+08],
       [-1.1555569e+08],
       [-1.1781990e+08]], dtype=float32), array([[103.03346  , 114.784996 ,   2.002095 ,  15.440221 ],
       [173.40237  , 176.44789  ,  -3.9519517,  17.843298 ],
       [177.96664  , 179.38728  ,  -4.2483144,  18.335323 ],
       [157.3115   , 123.08703  ,   2.9998693,  25.130234 ],
       [146.79294  , 142.84624  ,  23.257301 ,  65.22632  ]],
스탠다드 스케일러
750번정도에 끊긴듯
#모델1
econo = Input(shape=(5,3))
econo = Dense(200,activation='relu')(econo)
econo = Dense(15)(econo)
econo = Reshape((75,1))(econo)
econo = ReLU(2800,5)(econo)
econo = LSTM(64,activation='sigmoid')(econo)
# econo = Flatten()(econo)
econo = Dense(200)(econo)
econo = Dense(15)(econo)
econo = Reshape((5,3))(econo)
# econo  = Flatten()(econo)
# econo  = Dense(200)(econo)
# econo = Reshape((50,4))(econo)
# econo =  ReLU(8,10)(econo)

#모델2
democ = Input(shape=(5,3))
democ = Dense(200)(democ)
democ = Dense(15)(democ)
democ = Reshape((75,1))(democ)
democ = ReLU(28,10)(democ)
democ = LSTM(64)(democ)
# democ = Flatten()(democ)
democ = Dense(2000, activation='relu')(democ)
democ = Dense(15)(democ)
democ = Reshape((5,3))(democ)

# democ  = Flatten()(democ)
# democ  = Dense(200)(democ)
# democ = Reshape((50,4))(democ)
# democ =  ReLU(8,10)(democ)


#merge
president = concatenate((econo,democ))
president = Conv1D(12,3)(president)
president = Flatten()(president)
president = Dense(2000)(president)
president = Dropout(0.6)(president)
president = Dense(200)(president)
president = Dense(20)(president)
president = Dense(1)(president)

congress = concatenate((econo,democ))
congress = Conv1D(12,3)(congress)
congress = Flatten()(congress)
congress = Dense(8000)(congress)
congress = Dropout(0.8)(congress)
congress = Dense(80)(congress)
congress = Dense(4)(congress)

//
[array([[58896.188],
       [37020.727],
       [38760.023],
       [44581.625],
       [48864.906]], dtype=float32), array([[168.2732  , 171.34955 ,   8.190891,  14.9215  ],
       [227.04932 , 273.35748 , -28.846363,  21.84891 ],
       [237.35446 , 285.73157 , -30.167645,  22.794704],
       [171.4772  , 140.70845 , -28.938807,  11.237463],
       [164.56274 , 152.4004  , -18.234798,  10.892018]]
로스율 100안쪽
750 얼리
합이 300이 나와야 하는데

//
[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[ 24.955774 ,  38.99504  , -17.082626 , -40.664597 ],
       [112.657585 , 167.21956  ,   1.7251121,   5.1846137],
       [117.51171  , 174.51479  ,   1.7834648,   5.3380427],
       [ 33.042034 ,  60.940384 , -11.6358385,  -8.381732 ],
       [-51.102127 , -29.561779 , -20.363268 , -31.445616 ]],
      dtype=float32)]
대통령 마지막 레이어 시그모이어 적용후
맥스앱스
얼리 800
로스율 1000~10000

//

[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[ 17.520851 ,  19.107386 ,  15.260748 , -27.302204 ],
       [171.08452  , 213.72832  ,  13.879027 ,  13.054717 ],
       [178.8844   , 223.49847  ,  14.529048 ,  13.616033 ],
       [ 87.93565  ,  98.09589  ,  26.901583 ,  -1.593689 ],
       [  2.1842659,  16.269297 ,  35.969227 , -22.182508 ]],
      dtype=float32)]

로스율 2~3천
민맥스
얼리 1000
//

[array([[2.1508686e-05],
       [8.2807702e-01],
       [8.6751789e-01],
       [4.9912577e-32],
       [1.0000000e+00]], dtype=float32), array([[-54.28817  , -56.23006  ,  15.142462 , -14.166988 ],
       [174.58661  , 197.53004  ,  31.242296 ,   7.006562 ],
       [182.62451  , 206.61089  ,  32.708622 ,   7.28435  ],
       [ 88.04411  , 106.142105 ,   7.748447 ,  -1.8588657],
       [ 44.760727 ,  61.992416 ,  18.03442  , -24.315725 ]],
      dtype=float32)]
스탠다드
얼리 800
로스 200

//
[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[ 41.5273   ,  64.5507   , -24.478899 , -17.063961 ],
       [197.37836  , 279.77512  , -17.33918  ,  -6.6078405],
       [206.22238  , 292.32443  , -18.140696 ,  -6.9281487],
       [ 86.49198  , 144.04121  , -19.542215 , -15.51394  ],
       [ 65.58344  , 107.744835 , -17.62227  ,  -3.8317242]],
      dtype=float32)]
로스율 1000전후
얼리 1000
로버스트
//

[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[-100.681755  ,  -98.77792   ,   44.5077    ,    0.93438876],
       [  61.9132    ,  101.09177   ,    5.2225122 ,    0.510584  ],
       [  64.7824    ,  105.782104  ,    5.459477  ,    0.51292956],
       [-102.68365   ,  -89.18263   ,    8.377204  ,  -51.274223  ],
       [-134.38283   , -207.05255   ,    8.828074  ,  -74.85714   ]],
노멀라이저
얼리 1000
로스 1000
//
[array([[0.9999987],
       [1.       ],
       [1.       ],
       [1.       ],
       [1.       ]], dtype=float32), array([[150.94244  ,  38.91645  ,  46.888042 ,  -8.34534  ],
       [184.95671  , 181.29567  ,  31.821331 ,  18.39316  ],
       [192.75772  , 188.68253  ,  33.221363 ,  19.052645 ],
       [122.64217  ,  90.194695 ,  34.86425  ,  -1.4284219],
       [ 12.8391905, -84.68975  ,  29.490223 , -37.200775 ]],
      dtype=float32)]
얼리 천
로스 천
대통령 투표율에만 로멀랑저

//

loss: [5040.79931640625, 77.21664428710938, 4963.58251953125]
[array([[0.0000000e+00],
       [4.1542814e-18],
       [7.7172371e-07],
       [1.0558731e-13],
       [3.8332341e-21]], dtype=float32), array([[230.51407 , 349.82758 ,  17.05824 ,  31.069605],
       [232.53946 , 368.9177  ,  18.916285,  33.193504],
       [228.59618 , 388.184   ,  19.97841 ,  39.452984],
       [228.36514 , 395.80133 ,  20.799505,  41.383003],
       [217.87769 , 393.68625 ,  21.402117,  42.34592 ]], dtype=float32)]

만오천 발로스가 계속 상승

//

loss: [264.66192626953125, 0.4200885593891144, 264.2418518066406]
[array([[0.1749837 ],
       [0.1745217 ],
       [0.17595132],
       [0.1769904 ]], dtype=float32), array([[141.65897  , 150.79013  ,   1.9241644,   5.326935 ],
       [139.10109  , 149.89928  ,   1.8935255,   5.3806887],
       [138.8955   , 150.13501  ,   1.8848017,   5.44324  ],
       [140.80948  , 151.23192  ,   1.9342965,   5.3978853],
       [142.33371  , 152.06427  ,   1.9692124,   5.367668 ]],
      dtype=float32)]

발로스 상승
//
loss: [295.3435974121094, 0.48697248101234436, 294.85662841796875]
[array([[0.15367855],
       [0.15353712],
       [0.15359086],
       [0.15373951],
       [0.15380964]], dtype=float32), array([[146.55583  , 158.51295  ,   3.555764 ,   4.804814 
],
       [144.07513  , 157.36818  ,   3.5449896,   4.837505 ],
       [143.42638  , 157.51744  ,   3.5243974,   4.9416914],
       [145.92882  , 159.00359  ,   3.6056273,   4.829599 ],
       [147.5851   , 159.93866  ,   3.6568472,   4.7953324]],
      dtype=float32)]
국회으원수는 잘 나오는듯
ㄷ통령은 그냥 0?
//
loss: [1766.5086669921875, 2.9695627689361572, 1763.5390625]
[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[134.7663  , 247.56163 ,  13.698229,  25.112617],
       [126.69107 , 250.98326 ,  14.882729,  25.635986],
       [132.62373 , 249.41475 ,  14.714536,  23.919334],
       [132.1952  , 256.94156 ,  15.695383,  24.921637],
       [133.7019  , 258.94513 ,  15.873998,  25.661243]], dtype=float32)]
데이터 전처리에서 스케일링하고 보낸값
로스율에 비해 값은 준수하지만 기준보다 큼
//
[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[126.32664  , 158.76546  ,   5.655335 ,  10.52188  ],      
       [123.68648  , 162.08432  ,   6.192821 ,  11.632952 ],
       [122.232475 , 161.36298  ,   6.6649985,  11.492881 ],
       [123.7224   , 161.29208  ,   6.681933 ,  11.3115015],
       [123.67955  , 161.52881  ,   6.581353 ,  11.63292  ]],
지금까지중 제일 괜찮은 값인듯 세이브 웨이트 따로 저장

//
loss: [9827.849609375, 0.9132573008537292, 9826.9365234375]
[array([[0.9999012 ],
       [0.9999999 ],
       [1.        ],
       [0.9999999 ],
       [0.99999976]], dtype=float32), array([[126.99202  , 159.48964  ,   7.297725 ,  10.938444 
],
       [123.901955 , 160.9035   ,   6.4521313,  12.200433 ],
       [124.15829  , 159.65324  ,   6.524984 ,  11.9204855],
       [125.51123  , 160.067    ,   7.18894  ,  11.906299 ],
       [126.69648  , 160.38463  ,   7.5198503,  11.977063 ]],
      dtype=float32)]

//
loss: [11139.765625, 0.0012848565820604563, 11139.7646484375]
[array([[1.],
       [1.],
       [1.],
       [1.],
       [1.]], dtype=float32), array([[123.236755 
, 159.47267  ,   6.521747 ,  10.541661 ],
       [122.73581  , 160.24959  ,   5.8910084,  11.12676  ],
       [122.722046 , 159.44402  ,   6.479415 ,  10.539216 ],
       [124.16273  , 159.21602  ,   6.929173 ,  10.040712 ],
       [123.38617  , 159.54268  ,   7.0303626,  10.566722 ]],
      dtype=float32)]
발로스값 안드로메다

현재모델
econo = Input(shape=(5,3))
econo = Dense(200,activation='relu')(econo)
econo = Dense(15)(econo)
econo = Reshape((75,1))(econo)
econo = ReLU(2800,5)(econo)
econo = LSTM(64,activation='relu')(econo)
# econo = Flatten()(econo)
econo = Dense(200)(econo)
econo = Dense(15)(econo)
econo = Reshape((5,3))(econo)
# econo  = Flatten()(econo)
# econo  = Dense(200)(econo)
# econo = Reshape((50,4))(econo)
# econo =  ReLU(8,10)(econo)

#모델2
democ = Input(shape=(5,3))
democ = Dense(200)(democ)
democ = Dense(200)(democ)
democ = Dense(200)(democ)
democ = Dense(15)(democ)
democ = Reshape((75,1))(democ)
democ = ReLU(28,10)(democ)
democ = LSTM(64,return_sequences=True)(democ)
democ = Flatten()(democ)
democ = Dense(2000, activation='relu')(democ)
democ = Dense(15)(democ)
democ = Reshape((5,3))(democ)

# democ  = Flatten()(democ)
# democ  = Dense(200)(democ)
# democ = Reshape((50,4))(democ)
# democ =  ReLU(8,10)(democ)


#merge
president = concatenate((econo,democ))
president = Conv1D(12,3)(president)
president = Flatten()(president)
president = Dense(200,activation='tanh')(president)
president = Dense(200,activation='tanh')(president)
president = Dense(200,activation='tanh')(president)
president = Dropout(0.2)(president)
president = Dense(200,activation='elu')(president)
president = Dense(20)(president)
president = Dense(1,activation='sigmoid')(president)

congress = concatenate((econo,democ))
congress = Conv1D(12,3)(congress)
congress = Flatten()(congress)
congress = Dense(800,activation='relu')(congress)
congress = Dense(800,activation='relu')(congress)
congress = Dense(800,activation='relu')(congress)
congress = Dropout(0.4)(congress)
congress = Dense(80)(congress)
congress = Dense(4)(congress)
//